1. 
let arr1 = [1,2,3]
let arr2 = arr1
console.log(arr1); // [1,2,3]
console.log(arr2); // [1,2,3]
arr1.push(4);
console.log(arr2); // [1,2,3,4]***
BUT :------
let arr1 = [1,2,3]
let arr2 = [...arr1]
console.log(arr1); // [1,2,3]
console.log(arr2); // [1,2,3]
arr1.push(4);
console.log(arr2); // [1,2,3]***
_________________________________________________________
2.
let foo = "Global foo"
let bar = "Global Bar"
  const obj = {
    foo,
    bar: 'This is bar',
    getFoo() {
      let foo = "ABC";
      console.log('--',this.foo); // Global foo
      console.log('-->',this.bar); // This is bar
      console.log('>', bar); // Global bar
      let getBar = function(){
        console.log('=',this.foo); // Global foo
        console.log('==>',this.bar); // This is bar
      }.bind(this) // if not bind(this) // undefined , undefined
      getBar();
    }
  }
 obj.getFoo();
_________________________________________________________
console.log(1+"2"+"3"); //123
console.log(1++"2"+"3"); //Invalid left-hand side expression in postfix operation
console.log(1++); //Invalid left-hand side expression in postfix operation
console.log(1++2); // Invalid left-hand side expression in postfix operation
__________________________________________________________

5. Reverse Array Items
Ans :-
var arr = [1,2,34,4];
function reverse(items) {
var newArr = [];
for(let i = items.length-1; i>=0;i--) {
newArr.push(items[i])
}
var result = reverse(arr);
console.log(result);

3. ADD , REPLACE , REMOVE ITEMS FROM ARRAY

ADD:-
const arr = ["a","b"];
arr.splice(2,0,"c","d","e");
console.log(arr); // ["a", "b", "c", "d", "e"]
REPLACE:-
arr.splice(3,2,"Y","Z"); //["a", "b", "c", "Y", "Z"]
DELETE:-
arr.splice(1,3); //["a","e"]

console.log(arr1); // ["a", "b", "c", "Y", "Z"]
--------------------------------------------------------
var myObject = {
foo: 'bar',
  fun: function() {
    var self = this;
    console.log("outer this.foo", this.foo); // bar
    console.log("outer this.foo", self.foo); // bar
    (function(){
    	console.log("inner this.foo", this.foo); // undefined
        console.log("inner this.foo", self.foo); // bar
    }());
  }
}
myObject.fun();
_______________________________________________________
Closure with Example.

<button onclick="alert(increment())">++</button>

Js -
var increment =  (function(){ // call only once
 counter = 0;
 return function() {
  return ++counter;
 }
}())
---------------------------------------------------------
